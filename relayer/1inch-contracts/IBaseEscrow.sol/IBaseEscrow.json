{"abi":[{"type":"function","name":"FACTORY","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"RESCUE_DELAY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"cancel","inputs":[{"name":"immutables","type":"tuple","internalType":"struct IBaseEscrow.Immutables","components":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"hashlock","type":"bytes32","internalType":"bytes32"},{"name":"maker","type":"uint256","internalType":"Address"},{"name":"taker","type":"uint256","internalType":"Address"},{"name":"token","type":"uint256","internalType":"Address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"timelocks","type":"uint256","internalType":"Timelocks"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rescueFunds","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"immutables","type":"tuple","internalType":"struct IBaseEscrow.Immutables","components":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"hashlock","type":"bytes32","internalType":"bytes32"},{"name":"maker","type":"uint256","internalType":"Address"},{"name":"taker","type":"uint256","internalType":"Address"},{"name":"token","type":"uint256","internalType":"Address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"timelocks","type":"uint256","internalType":"Timelocks"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"secret","type":"bytes32","internalType":"bytes32"},{"name":"immutables","type":"tuple","internalType":"struct IBaseEscrow.Immutables","components":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"hashlock","type":"bytes32","internalType":"bytes32"},{"name":"maker","type":"uint256","internalType":"Address"},{"name":"taker","type":"uint256","internalType":"Address"},{"name":"token","type":"uint256","internalType":"Address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"timelocks","type":"uint256","internalType":"Timelocks"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"EscrowCancelled","inputs":[],"anonymous":false},{"type":"event","name":"EscrowWithdrawal","inputs":[{"name":"secret","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"FundsRescued","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"InvalidImmutables","inputs":[]},{"type":"error","name":"InvalidSecret","inputs":[]},{"type":"error","name":"InvalidTime","inputs":[]},{"type":"error","name":"NativeTokenSendingFailure","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"FACTORY()":"2dd31000","RESCUE_DELAY()":"f56cd69c","cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"90d3252f","rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"4649088b","withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":"23305703"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"EscrowWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"taker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"Timelocks\",\"name\":\"timelocks\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaseEscrow.Immutables\",\"name\":\"immutables\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"events\":{\"EscrowWithdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}},\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\"}},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Funds can only be rescued by the taker after the rescue delay.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"immutables\":\"The immutables of the escrow contract.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"immutables\":\"The immutables of the escrow contract.\",\"secret\":\"The secret that unlocks the escrow.\"}}},\"title\":\"Base Escrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"EscrowWithdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"}},\"kind\":\"user\",\"methods\":{\"FACTORY()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"RESCUE_DELAY()\":{\"notice\":\"Returns the delay for rescuing funds from the escrow.\"},\"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Rescues funds from the escrow.\"},\"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Interface implies locking funds initially and then unlocking them with verification of the secret presented.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol\":\"IBaseEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/\",\":ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=contracts/lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/\",\":solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol\":{\"keccak256\":\"0x79ac8e859e4562b08e5642a1f44b6ff9fb5d7197b8a916bc2353bc7422a241ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ce144afed593d34eff1c7344ca7d8bb698dbc1108748457fd8c3e2fcba0ba22\",\"dweb:/ipfs/QmSqxMBkyQfVMGw9TRoHyAgVn3JtoNpEkNCmTRL6ee2fvf\"]},\"contracts/lib/cross-chain-swap/contracts/libraries/TimelocksLib.sol\":{\"keccak256\":\"0xd6ad5f65d792a1bc4c40328afed51281b7855ebf69696125cbbec42b695e9379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db449fb7a9bd6d334ed5aeb4e14297a729e2a97fbf20b22821e18446b67bbaf2\",\"dweb:/ipfs/QmXUUBE2dyAF922kCaxhqDr1yL1s7t44di44ewWzEoKG3d\"]},\"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol\":{\"keccak256\":\"0xe860b410ed5371b9732daab80982eef0a42ae48474716a89725ca744e27b7d75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f12dfcc4aae2acb16afd6557ecbda6ec019e084463fd0fb08bc906d4416f59e\",\"dweb:/ipfs/QmSC48i8UngVeNyHzEKPjaXAJ74sfCS9FBCyY8uH6eLEe1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[],"type":"error","name":"InvalidImmutables"},{"inputs":[],"type":"error","name":"InvalidSecret"},{"inputs":[],"type":"error","name":"InvalidTime"},{"inputs":[],"type":"error","name":"NativeTokenSendingFailure"},{"inputs":[],"type":"event","name":"EscrowCancelled","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32","indexed":false}],"type":"event","name":"EscrowWithdrawal","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"FundsRescued","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"RESCUE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple","components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"cancel"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple","components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"rescueFunds"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"struct IBaseEscrow.Immutables","name":"immutables","type":"tuple","components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"hashlock","type":"bytes32"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"taker","type":"uint256"},{"internalType":"Address","name":"token","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"Timelocks","name":"timelocks","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"details":"The escrow can only be cancelled during the cancellation period. The safety deposit is sent to the caller.","params":{"immutables":"The immutables of the escrow contract."}},"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"details":"Funds can only be rescued by the taker after the rescue delay.","params":{"amount":"The amount of tokens to rescue.","immutables":"The immutables of the escrow contract.","token":"The address of the token to rescue. Zero address for native token."}},"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"details":"Withdrawal can only be made during the withdrawal period and with secret with hash matches the hashlock. The safety deposit is sent to the caller.","params":{"immutables":"The immutables of the escrow contract.","secret":"The secret that unlocks the escrow."}}},"version":1},"userdoc":{"kind":"user","methods":{"FACTORY()":{"notice":"Returns the address of the factory that created the escrow."},"RESCUE_DELAY()":{"notice":"Returns the delay for rescuing funds from the escrow."},"cancel((bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Cancels the escrow and returns tokens to a predetermined recipient."},"rescueFunds(address,uint256,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Rescues funds from the escrow."},"withdraw(bytes32,(bytes32,bytes32,uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Withdraws funds to a predetermined recipient."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/","cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/","ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","murky/=contracts/lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/","solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol":"IBaseEscrow"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"contracts/lib/cross-chain-swap/contracts/interfaces/IBaseEscrow.sol":{"keccak256":"0x79ac8e859e4562b08e5642a1f44b6ff9fb5d7197b8a916bc2353bc7422a241ae","urls":["bzz-raw://6ce144afed593d34eff1c7344ca7d8bb698dbc1108748457fd8c3e2fcba0ba22","dweb:/ipfs/QmSqxMBkyQfVMGw9TRoHyAgVn3JtoNpEkNCmTRL6ee2fvf"],"license":"MIT"},"contracts/lib/cross-chain-swap/contracts/libraries/TimelocksLib.sol":{"keccak256":"0xd6ad5f65d792a1bc4c40328afed51281b7855ebf69696125cbbec42b695e9379","urls":["bzz-raw://db449fb7a9bd6d334ed5aeb4e14297a729e2a97fbf20b22821e18446b67bbaf2","dweb:/ipfs/QmXUUBE2dyAF922kCaxhqDr1yL1s7t44di44ewWzEoKG3d"],"license":"MIT"},"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol":{"keccak256":"0xe860b410ed5371b9732daab80982eef0a42ae48474716a89725ca744e27b7d75","urls":["bzz-raw://3f12dfcc4aae2acb16afd6557ecbda6ec019e084463fd0fb08bc906d4416f59e","dweb:/ipfs/QmSC48i8UngVeNyHzEKPjaXAJ74sfCS9FBCyY8uH6eLEe1"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":8}