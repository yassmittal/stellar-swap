{"abi":[{"type":"function","name":"lastValidated","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"secretHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"error","name":"AccessDenied","inputs":[]},{"type":"error","name":"InvalidProof","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"lastValidated(bytes32)":"acf4ce5c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"lastValidated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@1inch.io\",\"kind\":\"dev\",\"methods\":{\"lastValidated(bytes32)\":{\"params\":{\"key\":\"Hash of concatenated order hash and 30 bytes of root hash.\"},\"returns\":{\"index\":\"Index of the last validated hashed secret.\",\"secretHash\":\"Last validated hashed secret.\"}}},\"title\":\"Merkle Storage Invalidator interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"lastValidated(bytes32)\":{\"notice\":\"Returns the index of the last validated hashed secret and the hashed secret itself.\"}},\"notice\":\"Interface to invalidate hashed secrets from an order that supports multiple fills.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/cross-chain-swap/contracts/interfaces/IMerkleStorageInvalidator.sol\":\"IMerkleStorageInvalidator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/\",\":ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=contracts/lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/\",\":solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"contracts/lib/cross-chain-swap/contracts/interfaces/IMerkleStorageInvalidator.sol\":{\"keccak256\":\"0xd17224d668d000818ff16b0546939c025230579122c5ff06ca39c2b11f0d6501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d335075a4479906c6bd9fe6c86a7fa41b04cf2af7b561a31bee24219341b4ff3\",\"dweb:/ipfs/QmSocpVTFVioeKAGecjETXNzHNCQpHuGY5py47W8kHiHRv\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AccessDenied"},{"inputs":[],"type":"error","name":"InvalidProof"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"lastValidated","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"secretHash","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"lastValidated(bytes32)":{"params":{"key":"Hash of concatenated order hash and 30 bytes of root hash."},"returns":{"index":"Index of the last validated hashed secret.","secretHash":"Last validated hashed secret."}}},"version":1},"userdoc":{"kind":"user","methods":{"lastValidated(bytes32)":{"notice":"Returns the index of the last validated hashed secret and the hashed secret itself."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/","cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/","ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","murky/=contracts/lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/","solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/lib/cross-chain-swap/contracts/interfaces/IMerkleStorageInvalidator.sol":"IMerkleStorageInvalidator"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"contracts/lib/cross-chain-swap/contracts/interfaces/IMerkleStorageInvalidator.sol":{"keccak256":"0xd17224d668d000818ff16b0546939c025230579122c5ff06ca39c2b11f0d6501","urls":["bzz-raw://d335075a4479906c6bd9fe6c86a7fa41b04cf2af7b561a31bee24219341b4ff3","dweb:/ipfs/QmSocpVTFVioeKAGecjETXNzHNCQpHuGY5py47W8kHiHRv"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":13}