{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IPermit2.PackedAllowance","components":[{"name":"amount","type":"uint160","internalType":"uint160"},{"name":"expiration","type":"uint48","internalType":"uint48"},{"name":"nonce","type":"uint48","internalType":"uint48"}]}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"permitSingle","type":"tuple","internalType":"struct IPermit2.PermitSingle","components":[{"name":"details","type":"tuple","internalType":"struct IPermit2.PermitDetails","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint160","internalType":"uint160"},{"name":"expiration","type":"uint48","internalType":"uint48"},{"name":"nonce","type":"uint48","internalType":"uint48"}]},{"name":"spender","type":"address","internalType":"address"},{"name":"sigDeadline","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint160","internalType":"uint160"},{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address,address)":"927da105","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","transferFrom(address,address,uint160,address)":"36c78516"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PackedAllowance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IPermit2.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IPermit2.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a flexible permit system that extends ERC20 tokens to support permits in tokens lacking native permit functionality.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"spender\":\"The spender's address.\",\"token\":\"The token address.\",\"user\":\"The token owner's address.\"},\"returns\":{\"_0\":\"The packed allowance details.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"params\":{\"owner\":\"The token owner's address.\",\"permitSingle\":\"Struct containing the permit details.\",\"signature\":\"The signature proving the owner authorized the permit.\"}},\"transferFrom(address,address,uint160,address)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"spender\":\"The address authorized to spend the tokens.\",\"token\":\"The address of the token being transferred.\",\"user\":\"The token owner's address.\"}}},\"title\":\"IPermit2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Retrieves the allowance details between a token owner and spender.\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Issues a permit for spending tokens via a signed authorization.\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Executes a token transfer from one address to another.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IPermit2.sol\":\"IPermit2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/\",\":ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=contracts/lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/\",\":solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IPermit2.sol\":{\"keccak256\":\"0x0e8375c63b72926e9073c5712fd6a181dce58ee155d73c57e34febace7949bfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3610a8a61e9f328b9802ffd04a66234423f41e73bd9cdd47a1e33960099397d0\",\"dweb:/ipfs/QmbuF3Qnn5Paqtp4mhEwerMo62byfFjERninMxGDCiQivt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"struct IPermit2.PackedAllowance","name":"","type":"tuple","components":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}]}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"struct IPermit2.PermitSingle","name":"permitSingle","type":"tuple","components":[{"internalType":"struct IPermit2.PermitDetails","name":"details","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}]},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}]},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permit"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address,address)":{"params":{"spender":"The spender's address.","token":"The token address.","user":"The token owner's address."},"returns":{"_0":"The packed allowance details."}},"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":{"params":{"owner":"The token owner's address.","permitSingle":"Struct containing the permit details.","signature":"The signature proving the owner authorized the permit."}},"transferFrom(address,address,uint160,address)":{"params":{"amount":"The amount of tokens to transfer.","spender":"The address authorized to spend the tokens.","token":"The address of the token being transferred.","user":"The token owner's address."}}},"version":1},"userdoc":{"kind":"user","methods":{"allowance(address,address,address)":{"notice":"Retrieves the allowance details between a token owner and spender."},"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":{"notice":"Issues a permit for spending tokens via a signed authorization."},"transferFrom(address,address,uint160,address)":{"notice":"Executes a token transfer from one address to another."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/","cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/","ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","murky/=contracts/lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/","solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IPermit2.sol":"IPermit2"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/interfaces/IPermit2.sol":{"keccak256":"0x0e8375c63b72926e9073c5712fd6a181dce58ee155d73c57e34febace7949bfa","urls":["bzz-raw://3610a8a61e9f328b9802ffd04a66234423f41e73bd9cdd47a1e33960099397d0","dweb:/ipfs/QmbuF3Qnn5Paqtp4mhEwerMo62byfFjERninMxGDCiQivt"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":50}