{"abi":[{"type":"function","name":"takerInteraction","inputs":[{"name":"order","type":"tuple","internalType":"struct IOrderMixin.Order","components":[{"name":"salt","type":"uint256","internalType":"uint256"},{"name":"maker","type":"uint256","internalType":"Address"},{"name":"receiver","type":"uint256","internalType":"Address"},{"name":"makerAsset","type":"uint256","internalType":"Address"},{"name":"takerAsset","type":"uint256","internalType":"Address"},{"name":"makingAmount","type":"uint256","internalType":"uint256"},{"name":"takingAmount","type":"uint256","internalType":"uint256"},{"name":"makerTraits","type":"uint256","internalType":"MakerTraits"}]},{"name":"extension","type":"bytes","internalType":"bytes"},{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"taker","type":"address","internalType":"address"},{"name":"makingAmount","type":"uint256","internalType":"uint256"},{"name":"takingAmount","type":"uint256","internalType":"uint256"},{"name":"remainingMakingAmount","type":"uint256","internalType":"uint256"},{"name":"extraData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":"adf38ba1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"maker\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"makerAsset\",\"type\":\"uint256\"},{\"internalType\":\"Address\",\"name\":\"takerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"MakerTraits\",\"name\":\"makerTraits\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderMixin.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"extension\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingMakingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"takerInteraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"details\":\"This callback allows to interactively handle maker aseets to produce takers assets, doesn't supports ETH as taker assets\",\"params\":{\"extension\":\"Order extension data\",\"extraData\":\"Extra data\",\"makingAmount\":\"Actual making amount\",\"order\":\"Order being processed\",\"orderHash\":\"Hash of the order being processed\",\"remainingMakingAmount\":\"Order remaining making amount\",\"taker\":\"Taker address\",\"takingAmount\":\"Actual taking amount\"}}},\"title\":\"Interface for interactor which acts after `maker -> taker` transfer but before `taker -> maker` transfer.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Callback method that gets called after maker fund transfer but before taker fund transfer\"}},\"notice\":\"The order filling steps are `preInteraction` =>` Transfer \\\"maker -> taker\\\"` => **`Interaction`** => `Transfer \\\"taker -> maker\\\"` => `postInteraction`\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/ITakerInteraction.sol\":\"ITakerInteraction\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/\",\":ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=contracts/lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/\",\":solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IOrderMixin.sol\":{\"keccak256\":\"0x8f13c59bdb818152a3046a63f1a65f8be1b8c0dbff6407e663bc20d1e6a3a84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5757f05f8dc7fe40604125321570251a6d152f89dfde3609bf2840063f39f052\",\"dweb:/ipfs/QmUjmTa5Ley6sEAmpKNFdFHEf4H1dvaVymGHddp7MJotKh\"]},\"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/ITakerInteraction.sol\":{\"keccak256\":\"0xd66e858e74309edb9de7866af1ccd92990b0f7367cf47b4b5acb94e336e57930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71e6083e9c676e955eba568d4d439d13584cb722186998d2d7e827222db8cb3c\",\"dweb:/ipfs/QmPhZsBiTQVQMkxGqTYebkUqsopCxzViCSSJR2y7Jeg2Sj\"]},\"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/MakerTraitsLib.sol\":{\"keccak256\":\"0xd0e1f653233823874ede7ac1410dc0b21ca83b4c153bdeff32f6d1f6fd7917e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8ae597779feec21fdce24aa17626e77fc5aa6bb4020faecc2d17e87e73891c6\",\"dweb:/ipfs/QmeTE3KzpmSQ73fBJqyeThnjJRntYMbuTbfwosNXcrXGvC\"]},\"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/TakerTraitsLib.sol\":{\"keccak256\":\"0x144f154a46e8daa0fec5b8215f1d8d3b694cb939236aa7bf89976b27965c2837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f23137afedddf14558f8ed65b7ab2fbb1d9fef29d728208ed5688a7d3fcd974\",\"dweb:/ipfs/QmfAzyJViWvYAgoSrnKHZSRx36VF8xwdLQjhEw1Y6PGok9\"]},\"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol\":{\"keccak256\":\"0xe860b410ed5371b9732daab80982eef0a42ae48474716a89725ca744e27b7d75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f12dfcc4aae2acb16afd6557ecbda6ec019e084463fd0fb08bc906d4416f59e\",\"dweb:/ipfs/QmSC48i8UngVeNyHzEKPjaXAJ74sfCS9FBCyY8uH6eLEe1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct IOrderMixin.Order","name":"order","type":"tuple","components":[{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"Address","name":"maker","type":"uint256"},{"internalType":"Address","name":"receiver","type":"uint256"},{"internalType":"Address","name":"makerAsset","type":"uint256"},{"internalType":"Address","name":"takerAsset","type":"uint256"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"MakerTraits","name":"makerTraits","type":"uint256"}]},{"internalType":"bytes","name":"extension","type":"bytes"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"takingAmount","type":"uint256"},{"internalType":"uint256","name":"remainingMakingAmount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"takerInteraction"}],"devdoc":{"kind":"dev","methods":{"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":{"details":"This callback allows to interactively handle maker aseets to produce takers assets, doesn't supports ETH as taker assets","params":{"extension":"Order extension data","extraData":"Extra data","makingAmount":"Actual making amount","order":"Order being processed","orderHash":"Hash of the order being processed","remainingMakingAmount":"Order remaining making amount","taker":"Taker address","takingAmount":"Actual taking amount"}}},"version":1},"userdoc":{"kind":"user","methods":{"takerInteraction((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),bytes,bytes32,address,uint256,uint256,uint256,bytes)":{"notice":"Callback method that gets called after maker fund transfer but before taker fund transfer"}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/contracts/","cross-chain-swap/=contracts/lib/cross-chain-swap/contracts/","ds-test/=contracts/lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","limit-order-protocol/=contracts/lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=contracts/lib/cross-chain-swap/lib/limit-order-settlement/","murky/=contracts/lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=contracts/lib/cross-chain-swap/lib/openzeppelin-contracts/","solidity-utils/=contracts/lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/ITakerInteraction.sol":"ITakerInteraction"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/IOrderMixin.sol":{"keccak256":"0x8f13c59bdb818152a3046a63f1a65f8be1b8c0dbff6407e663bc20d1e6a3a84c","urls":["bzz-raw://5757f05f8dc7fe40604125321570251a6d152f89dfde3609bf2840063f39f052","dweb:/ipfs/QmUjmTa5Ley6sEAmpKNFdFHEf4H1dvaVymGHddp7MJotKh"],"license":"MIT"},"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/interfaces/ITakerInteraction.sol":{"keccak256":"0xd66e858e74309edb9de7866af1ccd92990b0f7367cf47b4b5acb94e336e57930","urls":["bzz-raw://71e6083e9c676e955eba568d4d439d13584cb722186998d2d7e827222db8cb3c","dweb:/ipfs/QmPhZsBiTQVQMkxGqTYebkUqsopCxzViCSSJR2y7Jeg2Sj"],"license":"MIT"},"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/MakerTraitsLib.sol":{"keccak256":"0xd0e1f653233823874ede7ac1410dc0b21ca83b4c153bdeff32f6d1f6fd7917e3","urls":["bzz-raw://b8ae597779feec21fdce24aa17626e77fc5aa6bb4020faecc2d17e87e73891c6","dweb:/ipfs/QmeTE3KzpmSQ73fBJqyeThnjJRntYMbuTbfwosNXcrXGvC"],"license":"MIT"},"contracts/lib/cross-chain-swap/lib/limit-order-protocol/contracts/libraries/TakerTraitsLib.sol":{"keccak256":"0x144f154a46e8daa0fec5b8215f1d8d3b694cb939236aa7bf89976b27965c2837","urls":["bzz-raw://8f23137afedddf14558f8ed65b7ab2fbb1d9fef29d728208ed5688a7d3fcd974","dweb:/ipfs/QmfAzyJViWvYAgoSrnKHZSRx36VF8xwdLQjhEw1Y6PGok9"],"license":"MIT"},"contracts/lib/cross-chain-swap/lib/solidity-utils/contracts/libraries/AddressLib.sol":{"keccak256":"0xe860b410ed5371b9732daab80982eef0a42ae48474716a89725ca744e27b7d75","urls":["bzz-raw://3f12dfcc4aae2acb16afd6557ecbda6ec019e084463fd0fb08bc906d4416f59e","dweb:/ipfs/QmSC48i8UngVeNyHzEKPjaXAJ74sfCS9FBCyY8uH6eLEe1"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":22}